def arithmetic_arranger(problems, show_answers=False):

    answers = []
    equals = []
    spaces = []

    if len(problems) > 5:
        return "Error: Too many problems."

    #build the structure to pull from to make desired output. 

    for ind in range(len(problems)):

        # create list of lists of for each problem
        problems[ind] = problems[ind].split()


        if problems[ind][1] == '*' or problems[ind][1] ==  '/':
            return "Error: Operator must be '+' or '-'."

        if len(problems[ind][0]) > 4 or len(problems[ind][2]) >4:
             return 'Error: Numbers cannot be more than four digits.'

        try:
            int(problems[ind][0]) and int(problems[ind][2])
        except:
            return 'Error: Numbers must only contain digits.'


        # create list of answers
        if problems[ind][1] == '+':
            answers.append(str(
                int(problems[ind][0]) +
                int(problems[ind][2])))

        else:
            answers.append(str(
                int(problems[ind][0]) -
                int(problems[ind][2])))


        # create equals lines for each problem
        len_equals = max(len(problems[ind][0]),
                    len(problems[ind][2])) +2

        equals.append('-'*len_equals)
        
        spaces.append(' '*(len_equals - (len(problems[ind][2])+1)))

    line1,line2,line3,line4 = '','\n','\n','\n'

    for i in range(len(problems)):

        width = len(equals[i]) #makes each problem as wide as the equals line
        line1 += f'{problems[i][0]:>{width}}    '     
        
        line2 += f'{problems[i][1]+spaces[i]+problems[i][2]:>{width}}    '
        
        line3 += f'{equals[i]:>{width}}    '

        line4 += f'{answers[i]:>{width}}    '

    line1 = line1.rstrip()
    line2 = line2.rstrip()
    line3 = line3.rstrip()
    line4 = line4.rstrip()

    if not show_answers:
        return line1 + line2 + line3 
    else:
        return line1 + line2 + line3 + line4






"""
print(f'{arithmetic_arranger(["3801 - 2", "123 + 49"])}')
print('  3801      123\n-    2    +  49\n------    -----')

print(f'{arithmetic_arranger(["1 + 2", "1 - 9380"])}')
print('  1         1\n+ 2    - 9380\n---    ------')

print(f'\n{arithmetic_arranger(["3 + 855", "3801 - 2", "45 + 43", "123 + 49"])}')
print('    3      3801      45      123\n+ 855    -    2    + 43    +  49\n-----    ------    ----    -----')

print(f'\n{arithmetic_arranger(["11 + 4", "3801 - 2999", "1 + 2", "123 + 49", "1 - 9380"])}')
print('  11      3801      1      123         1\n+  4    - 2999    + 2    +  49    - 9380\n----    ------    ---    -----    ------')

print(f'\n{arithmetic_arranger(["3 + 855", "988 + 40"], True)}')
print('    3      988\n+ 855    +  40\n-----    -----\n  858     1028')

print(f'\n{arithmetic_arranger(["32 - 698", "1 - 3801", "45 + 43", "123 + 49", "988 + 40"], True)}')
print('   32         1      45      123      988\n- 698    - 3801    + 43    +  49    +  40\n-----    ------    ----    -----    -----\n -666     -3800      88      172     1028')
"""


